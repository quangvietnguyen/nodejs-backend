{"version":3,"sources":["shared/components/UIElements/Map.js","places/components/Place.js","places/components/PlaceList.js","places/pages/UserPlaces.js","shared/components/FormElements/Button.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/hooks/http-hook.js","shared/components/UIElements/Modal.js"],"names":["mapboxgl","accessToken","process","Map","props","mapRef","useRef","center","zoom","useEffect","map","container","current","style","Marker","setLngLat","addTo","ref","className","Place","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useState","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","a","id","Authorization","token","onDelete","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","coordinates","Fragment","inverse","danger","LoadingSpinner","asOverlay","Card","src","image","alt","title","description","userId","creatorId","to","PlaceList","items","length","place","key","creator","location","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","responseData","places","fetchPlaces","deletedPlaceId","prevPlaces","filter","href","size","children","exact","type","disabled","setIsLoading","setError","activeHttpRequests","useCallback","url","method","body","headers","httpAbortCtrl","AbortController","push","fetch","signal","response","json","reqCtrl","ok","Error","message","forEach","abortCtrl","abort","ModalOverlay","content","headerClass","onSubmit","event","preventDefault","ReactDOM","createPortal","document","getElementById","in","mountOnEnter","unmountOnExit","timeout","classNames"],"mappings":"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","file":"static/js/6.98ba44d8.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport \"./Map.css\";\nimport 'mapbox-gl/dist/mapbox-gl.css';\nmapboxgl.accessToken = process.env.REACT_APP_API_KEY;\n\nconst Map = (props) => {\n  const mapRef = useRef(null);\n  //const map = useRef(null);\n  const { center, zoom } = props;\n  useEffect(() => {\n    //if (map.current) return;\n    const map = new mapboxgl.Map({\n      container: mapRef.current,\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: center,\n      zoom: zoom,\n    });\n\n    new mapboxgl.Marker().setLngLat(center).addTo(map);\n  }, [center, zoom]);\n\n  return (\n    <div\n      ref={mapRef}\n      className={`map ${props.className}`}\n      style={props.style}\n    ></div>\n  );\n};\n\nexport default Map;\n","import React, { Fragment, useContext, useState } from \"react\";\nimport \"./Place.css\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Modal from \"../../shared/components/UIElements/Modal\";\nimport Map from \"../../shared/components/UIElements/Map\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\n\nconst Place = (props) => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [showMap, setShowMap] = useState(false);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n  const openMapHandler = () => {\n    setShowMap(true);\n  };\n\n  const closeMapHandler = () => {\n    setShowMap(false);\n  };\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/places/${props.id}`,\n        \"DELETE\",\n        null,\n        {\n          Authorization: \"Bearer \" + auth.token\n        }\n      );\n      props.onDelete(props.id);\n    } catch (e) {}\n  };\n\n  return (\n    <Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Modal\n        show={showMap}\n        onCancel={closeMapHandler}\n        header={props.address}\n        contentClass=\"place-item__modal-content\"\n        footerClass=\"place-item__modal-actions\"\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\n      >\n        <div className=\"map-container\">\n          <Map center={props.coordinates} zoom={9} />\n        </div>\n      </Modal>\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"Are you sure?\"\n        footerClass=\"place-item_modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>Do you want to delete this place? This could not be undo.</p>\n      </Modal>\n      <li className=\"place-item\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Card className=\"place-item__content\">\n          <div className=\"place-item__image\">\n            <img\n              src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\n              alt={props.title}\n            />\n          </div>\n          <div className=\"place-item__info\">\n            <h2>{props.title}</h2>\n            <h3>{props.address}</h3>\n            <p>{props.description}</p>\n          </div>\n          <div className=\"place-item__actions\">\n            <Button inverse onClick={openMapHandler}>\n              VIEW ON MAP\n            </Button>\n            {auth.userId === props.creatorId && (\n              <React.Fragment>\n                <Button to={`/places/${props.id}`}>EDIT</Button>\n                <Button danger onClick={showDeleteWarningHandler}>\n                  DELETE\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Card>\n      </li>\n    </Fragment>\n  );\n};\n\nexport default Place;\n","import React from \"react\";\nimport \"./PlaceList.css\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Place from \"./Place\";\nimport Button from \"../../shared/components/FormElements/Button\";\n\nconst PlaceList = (props) => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card>\n          <h2>No places found. Please create one.</h2>\n          <Button to=\"places/new\">Share Place</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"place-list\">\n      {props.items.map((place) => (\n        <Place\n          key={place.id}\n          id={place.id}\n          image={place.image}\n          title={place.title}\n          description={place.description}\n          address={place.address}\n          creatorId={place.creator}\n          coordinates={place.location}\n          onDelete={props.onDelete}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default PlaceList;\n","import React, { useEffect, useState } from \"react\";\nimport PlaceList from \"../components/PlaceList\";\nimport { useParams } from \"react-router\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\n\n// const DUMMY_Places = [\n//   {\n//     id: \"p1\",\n//     title: \"CN Tower\",\n//     description: \"Highest site in Canada\",\n//     imageUrl:\n//       \"https://upload.wikimedia.org/wikipedia/commons/9/96/Toronto_-_ON_-_Toronto_Harbourfront7.jpg\",\n//     address: \"290 Bremner Blvd, Toronto, ON M5V 3L9\",\n//     location: {\n//       lng: -79.3852341,\n//       lat: 43.6430207,\n//     },\n//     creator: \"u1\",\n//   },\n//   {\n//     id: \"p2\",\n//     title: \"CNN Tower\",\n//     description: \"Highest site in Canada\",\n//     imageUrl:\n//       \"https://upload.wikimedia.org/wikipedia/commons/9/96/Toronto_-_ON_-_Toronto_Harbourfront7.jpg\",\n//     address: \"290 Bremner Blvd, Toronto, ON M5V 3L9\",\n//     location: {\n//       lng: -79.3852341,\n//       lat: 43.6430207,\n//     },\n//     creator: \"u2\",\n//   },\n// ];\n\nconst UserPlaces = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedPlaces, setLoadedPlaces] = useState();\n  const userId = useParams().userId;\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\n        );\n        setLoadedPlaces(responseData.places);\n      } catch (e) {}\n    };\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n  const placeDeleteHandler = (deletedPlaceId) => {\n    setLoadedPlaces(prevPlaces => prevPlaces.filter(place => place.id !== deletedPlaceId))\n  }\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedPlaces && <PlaceList items={loadedPlaces} onDelete={placeDeleteHandler}/>}\n    </React.Fragment>\n  );\n};\n\nexport default UserPlaces;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import { useState, useCallback, useRef, useEffect } from \"react\";\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = \"GET\", body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal,\n        });\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\n        );\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n        setIsLoading(false);\n        return responseData;\n      } catch (e) {\n        setError(e.message);\n        setIsLoading(false);\n        throw e;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Modal.css\";\nimport Backdrop from \"./Backdrop\";\nimport { CSSTransition } from \"react-transition-group\";\n\nconst ModalOverlay = (props) => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\n        }\n      ></form>\n      <div className={`modal__content ${props.contentClass}`}>\n        {props.children}\n      </div>\n      <footer className={`modal__footer ${props.footerClass}`}>\n        {props.footer}\n      </footer>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\n};\n\nconst Modal = (props) => {\n  return (\n    <Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </Fragment>\n  );\n};\n\nexport default Modal;\n"],"sourceRoot":""}