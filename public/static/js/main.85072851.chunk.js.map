{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setIsLoggedIn","tokenExpirationDate","setTokenExpirationDate","setToken","setUserId","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","id","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","toString","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.85072851.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  token: null,\n  login: () => {},\n  logout: () => {},\n});\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import { useState, useCallback, useEffect } from \"react\";\n\nlet logoutTimer;\nexport const useAuth = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [token, setToken] = useState();\n  const [userId, setUserId] = useState();\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setIsLoggedIn(true);\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      \"userData\",\n      JSON.stringify({\n        id: uid,\n        token: token,\n        expiration: tokenExpirationDate.toISOString(),\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setIsLoggedIn(false);\n    setTokenExpirationDate(null);\n    setToken(null);\n    setUserId(null);\n    localStorage.removeItem(\"userData\");\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime =\n        tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(\n        storedData.id.toString(),\n        storedData.token,\n        new Date(storedData.expiration)\n      );\n    }\n  }, [login]);\n  return { token, login, logout, userId, isLoggedIn };\n};\n","import React from \"react\";\n\nimport \"./MainHeader.css\";\n\nconst MainHeader = (props) => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from \"react\";\nimport \"./NavLinks.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/auth-context\";\n\nconst NavLinks = (props) => {\n  const auth = useContext(AuthContext);\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/\" exact>\n          ALL USERS\n        </NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">LOGIN</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <button onClick={auth.logout}>LOGOUT</button>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from \"react\";\nimport \"./SideDrawer.css\";\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\n\nconst SideDrawer = (props) => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById(\"drawer-hook\"));\n};\n\nexport default SideDrawer;\n","import React, { Fragment, useState } from \"react\";\nimport MainHeader from \"./MainHeader\";\nimport \"./MainNavigation.css\";\nimport { Link } from \"react-router-dom\";\nimport NavLinks from \"./NavLinks\";\nimport SideDrawer from \"./SideDrawer\";\nimport Backdrop from \"../UIElements/Backdrop\";\n\nconst MainNavigation = (props) => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n      <MainHeader>\n        <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">Travel Diary</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </Fragment>\n  );\n};\n\nexport default MainNavigation;\n","// import NewPlace from \"./places/pages/NewPlace\";\n// import UserPlaces from \"./places/pages/UserPlaces\";\n// import UpdatePlace from \"./places/pages/UpdatePlace\";\n// import Auth from \"./users/pages/Auth\";\n\nimport React, { Suspense } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\n\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport LoadingSpinner from \"./shared/components/UIElements/LoadingSpinner\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { useAuth } from \"./shared/hooks/auth-hook\";\nconst Users = React.lazy(() => import(\"./users/pages/Users\"));\nconst NewPlace = React.lazy(() => import(\"./places/pages/NewPlace\"));\nconst UserPlaces = React.lazy(() => import(\"./places/pages/UserPlaces\"));\nconst UpdatePlace = React.lazy(() => import(\"./places/pages/UpdatePlace\"));\nconst Auth = React.lazy(() => import(\"./users/pages/Auth\"));\n\nconst App = () => {\n  const { token, login, logout, userId, isLoggedIn } = useAuth();\n  let routes;\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: isLoggedIn,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout,\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main className=\"center\">\n          <Suspense\n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner />\n              </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}